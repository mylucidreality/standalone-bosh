---
name: credhub

releases:
- name: cf-mysql
  version: latest
- name: routing
  version: 0.179.0
- name: uaa
  version: latest
- name: credhub
  version: latest

stemcells:
- alias: xenial
  os: ubuntu-xenial
  version: latest
- alias: ubuntu-trusty
  os: ubuntu-trusty
  version: latest

update:
  canaries: 1
  canary_watch_time: 10000-300000
  max_in_flight: 1
  serial: true
  update_watch_time: 10000-300000

instance_groups:
- name: db
  azs: ((azs))
  networks:
  - name: default
  stemcell: xenial
  vm_type: default
  persistent_disk: 10240
  instances: 3
  jobs:
  - name: mysql
    release: cf-mysql
    properties:
      cf_mysql:
        port: 3306
        mysql:
          admin_username: admin
          admin_password: ((db_admin_password))
          tls:
            ca_certificate: ((/certs/wildcard.ca))
            server_certificate: ((/certs/wildcard.certificate))
            server_key: ((/certs/wildcard.private_key))
          seeded_databases:
            - name: credhub
              username: credhub
              password: ((credhub_db_password))
            - name: uaa
              username: uaa
              password: ((credhub_uaa_db_password))
          galera_healthcheck:
            endpoint_password: ((galera_healthcheck_endpoint_password))
            db_password: ((galera_healthcheck_db_password))
          cluster_health:
            password: ((cluster_health_password))
  - name: smoke-tests-user
    release: cf-mysql
    properties:
      cf_mysql:
        smoke_tests:
          db_password: ((mysql_smoke_tests_db_password))

- name: arbitrator
  instances: 1
  azs: [z1]
  networks: [{name: default}]
  vm_type: default
  stemcell: xenial
  jobs:
  - release: cf-mysql
    name: arbitrator
    properties:
      cf_mysql:
        mysql:
          admin_password: ((db_admin_password))
          galera_healthcheck:
            endpoint_password: ((galera_healthcheck_endpoint_password))

- name: proxy
  instances: 1 #this needs to be 1 due to proxy limitations behing a load balancer
  azs: [z1]
  networks:
  - name: default
    static_ips: [((credhub_mySQL_proxy_ip))]
  vm_type: default
  stemcell: xenial
  jobs:
  - name: route_registrar
    release: routing
    consumes:
      nats:
        deployment: routing
        from: nats
    properties:
      route_registrar:
        routes:
        - name: cf-mysql-proxy
          port: 8080
          prepend_instance_index: true
          registration_interval: 10s
          uris:
          - proxy-mysql.((system_domain))
        - name: cf-mysql-proxy-aggregator
          port: 8082
          registration_interval: 10s
          uris:
          - proxy-mysql.((system_domain))
        - name: credhub-mysql
          port: 3306
          registration_interval: 10s
          uris:
          - proxy-mysql.((system_domain))
  - name: proxy
    release: cf-mysql
    properties:
      cf_mysql:
        proxy:
          api_aggregator_port: 8081
          api_port: 8080
          api_uri: proxy-mysql.((system_domain))
          api_username: proxy
          api_password: ((mysql_proxy_api_password))
          port: 3306
    provides:
      mysql-database:
        as: mysql-database
        shared: true

- name: bootstrap-vm
  instances: 1
  lifecycle: errand
  azs: [z1]
  networks: [{name: default}]
  vm_type: default
  stemcell: xenial
  jobs:
  - {release: cf-mysql, name: bootstrap}

- name: rejoin-unsafe-vm
  instances: 1
  lifecycle: errand
  azs: [z1]
  networks: [{name: default}]
  vm_type: default
  stemcell: xenial
  jobs:
  - {release: cf-mysql, name: rejoin-unsafe}

- name: verify-cluster-schemas-vm
  instances: 1
  lifecycle: errand
  azs: [z1]
  networks: [{name: default}]
  vm_type: default
  stemcell: xenial
  jobs:
  - name: verify-cluster-schemas
    release: cf-mysql
    properties:
      cf_mysql:
        mysql:
          admin_password: ((db_admin_password))
          galera_healthcheck:
            endpoint_password: ((galera_healthcheck_endpoint_password))

- name: smoke-tests-vm
  instances: 1
  lifecycle: errand
  azs: [z1]
  networks: [{name: default}]
  vm_type: default
  stemcell: xenial
  jobs:
  - name: smoke-tests
    release: cf-mysql
    properties:
      cf_mysql:
        mysql:
          admin_password: ((db_admin_password))
        proxy:
          api_password: ((mysql_proxy_api_password))
        smoke_tests:
          db_password: ((mysql_smoke_tests_db_password))
          standalone_tests_only: true


- name: credhub
  azs: ((azs))
  networks:
  - name: default
    static_ips: [((credhub_static_ips))]
  stemcell: xenial
  persistent_disk: 5120
  vm_type: medium
  instances: 1
  jobs:
  - name: route_registrar
    release: routing
    consumes:
      nats:
        deployment: routing
        from: nats
    properties:
      route_registrar:
          routes:
          - name: credhub
            port: 8844
            registration_interval: 20s
            uris: 
            - credhub.((system_domain))
          - name: uaa
            port: 8443
            registration_interval: 20s
            uris: 
            - credhub-uaa.((system_domain))

  - name: uaa
    release: uaa
    properties:
      bpm:
        enabled: false
      uaa:
        ca_cert: ((/certs/default_ca.certificate))
        url: https://credhub-uaa.((system_domain))
        catalina_opts: -Djava.security.egd=file:/dev/./urandom -Xmx768m -XX:MaxMetaspaceSize=256m
        log_level: debug
        scim:
          users:
          - name: admin
            password: ((uaa-users-admin))
            groups:
              - scim.write
              - scim.read
              - credhub.read
              - credhub.write
        clients:
          credhub_admin_client:
            override: true
            authorized-grant-types: client_credentials
            scope: uaa.none
            authorities: credhub.read,credhub.write
            access-token-validity: 3600
            secret: ((credhub-admin-client-password))
          uaa_admin:
            authorities: clients.read,clients.write,clients.secret,uaa.admin,scim.read,scim.write,password.write
            authorized-grant-types: client_credentials
            override: true
            scope: ""
            secret: ((credhub_uaa_admin_password))
          credhub_cli:
            override: true
            authorized-grant-types: password,refresh_token
            scope: credhub.read,credhub.write
            authorities: uaa.resource
            access-token-validity: 120
            refresh-token-validity: 1800
            secret: ""
          concourse_to_credhub:
            access-token-validity: 1200
            authorities: credhub.read,credhub.write
            authorized-grant-types: client_credentials
            override: true
            refresh-token-validity: 3600
            scope: ""
            secret: ((/concourse/concourse_to_credhub_secret))
        jwt:
          revocable: true
          policy:
            active_key_id: uaa-encryption-key-1
            keys:
              uaa-encryption-key-1:
                signingKey: ((uaa-jwt.private_key))
        port: 8443
        admin: {client_secret: ((credhub_uaa_admin_password))}
        login: {client_secret: ((uaa-login))}
        zones:
          internal:
            hostnames: []
        sslCertificate: ((/certs/default_ca.certificate))
        sslPrivateKey: ((/certs/default_ca.private_key))
      uaadb:
        address: ((credhub_mySQL_proxy_ip))
        port: 3306
        db_scheme: mysql
        tls_enabled: false
        databases:
        - tag: uaa
          name: uaa
        roles:
        - tag: admin
          name: uaa
          password: ((credhub_uaa_db_password))
      login:
        prompt:
          password:
            text: "Enter credhub UAA password"
          username:
            text: "Enter Credhub Username"
        saml:
          serviceProviderCertificate: ((/certs/default_ca.certificate))
          serviceProviderKey: ((/certs/default_ca.private_key))
          serviceProviderKeyPassword: ""
      encryption:
        active_key_label: uaa-encryption-key-1
        encryption_keys:
        - label: uaa-encryption-key-1
          passphrase: ((uaa_encryption_password))

  - name: credhub
    release: credhub
    provides:
      credhub:
        shared: true
    properties:
      credhub:
        tls: ((/certs/wildcard))
        port: 8844
        authentication:
          uaa:
            url: https://credhub-uaa.((system_domain))
            verification_key: ((uaa-jwt.public_key))
            ca_certs:
            - ((/certs/wildcard.certificate))
        authorization:
          acls:
            enabled: false
          permissions:
          - actors:
            - uaa-client:credhub_admin_client
            - uaa-client:concourse_to_credhub
            operations:
            - read
            - write
            - delete
            - read_acl
            - write_acl
            path: /*
        ca_certificate: ((/certs/wildcard.ca))
        data_storage:
          type: mysql
          username: credhub
          password: ((credhub_db_password))
          database: credhub
          host: ((credhub_mySQL_proxy_ip))
          port: 3306
          require_tls: true
          tls_ca: ((/certs/wildcard.ca))
        log_level: debug
        internal_url: credhub.service.cf.internal
        encryption:
          keys: 
          - provider_name: int
            key_properties:
              encryption_password: ((credhub-encryption-password))
            active: true
          providers: 
          - name: int
            type: internal

variables:
- name: uaa-jwt
  type: rsa
  options:
    key_length: 4096

#UAA
- name: uaa-users-admin
  type: password
- name: credhub_uaa_admin_password
  type: password
- name: uaa-login
  type: password
- name: uaa_encryption_password
  type: password

#CredHub
- name: credhub-encryption-password
  type: password
  options:
    length: 40
- name: credhub-admin-client-password
  type: password

#MySQL Vars
- name: mysql_smoke_tests_db_password
  type: password
- name: mysql_proxy_api_password
  type: password
- name: galera_healthcheck_endpoint_password
  type: password
- name: galera_healthcheck_db_password
  type: password
- name: cluster_health_password
  type: password
- name: db_admin_password
  type: password

#DB Passwords
- name: credhub_db_password
  type: password
- name: credhub_uaa_db_password
  type: password

#Clinet Passwords
- name: /concourse/concourse_to_credhub_secret
  type: password